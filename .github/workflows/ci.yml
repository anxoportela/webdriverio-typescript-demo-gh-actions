name: WebDriverIO CI 🚀

on:
  workflow_dispatch:
    inputs:
      trigger:
        description: "Trigger the workflow (set to true)"
        required: true
        default: "false"
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 * * * *'

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository 🛠️
        uses: actions/checkout@v4

      - name: Set up Node.js 🧑‍💻
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Cache Node.js modules 🗃️
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
            node-

      - name: Install dependencies 📦
        run: npm ci

      - name: Run WebDriverIO tests 🧪
        run: npx wdio run wdio.conf.ts

      - name: Upload Allure Results as Artifact 📦
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: ./reports/allure-results # Upload the generated results as an artifact

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: success()
    permissions:
      contents: write

    steps:
      - name: Checkout repository 🛠️
        uses: actions/checkout@v4

      - name: Checkout allure-results branch 🧑‍💻
        run: |
          git fetch origin allure-results
          git checkout -b allure-results --track origin/allure-results || git checkout allure-results

      - name: Set Git user identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      - name: Create 'test-history' directory 📁
        run: mkdir -p ./test-history

      # Download the current Allure results from the 'test' job artifact
      - name: Download current Allure results from test job 📥
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: ./new-results

      - name: Create a timestamped directory for the current run 🕒
        run: |
          # Create a new directory using the current timestamp
          timestamp=$(date +'%Y-%m-%d_%H-%M-%S')
          mkdir -p "./test-history/$timestamp/allure-results"
          
          # Copy the current results into the timestamped folder
          cp -r ./new-results/* "./test-history/$timestamp/allure-results"

      - name: Install Allure CLI 📦
        run: npm install -g allure-commandline --save-dev

      - name: Generate the Allure report with all historical results 📊
        run: |
          # Generate the Allure report using results from all historical runs
          # Include all folders in ./test-history
          allure generate ./test-history/*/allure-results --clean -o ./allure-report

      - name: Save current Allure results without overwriting history 📦
        run: |
          # Commit and push the newly created folder with results
          git add ./test-history/$timestamp
          git commit -m "Add Allure results for $timestamp"
          git push origin allure-results

      - name: Deploy Allure Report to GitHub Pages 📤
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GH_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
